#spring.profiles.active=dev

spring.application.name=Loon
info.app.name=Loon

# LOGGING
logging.file=logs/loon.log
logging.file.max-history=0
logging.file.max-size=10MB
logging.path=logs
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS
logging.pattern.level=%5p

## DATASOURCE
spring.datasource.name=postgresDB
spring.datasource.url=jdbc:postgresql://localhost:5432/loon?currentSchema=public
spring.datasource.username=postgres
spring.datasource.password=password
spring.jpa.hibernate.ddl-auto=update
## H2_TCP
#dbMode=H2_TCP
#dbHost=localhost
#dbPort=9092
#dbName=~/loon/loon
#dbUser=
#dbPass=

server.port = 8082
server.compression.enabled=true
server.servlet.session.timeout=120m

# 1 day cache
spring.resources.cache.period = 1D
spring.resources.cache.cachecontrol.no-cache=true
spring.resources.cache.cachecontrol.no-store=false
spring.resources.cache.cachecontrol.must-revalidate=true
spring.resources.cache.cachecontrol.max-age=31536000

# postgres lob issue workaround
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.boot.admin.client.url=http://localhost:8080
#management.endpoints.web.exposure.include=*

spring.servlet.multipart.location=c:/temp/multipart/


#Metrics related configurations
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.hikaricp=postgresDB